监控命令
教学计算机的操作与使用方法，主要指通过由监控程序提供的监控命令控制教学计算机的运行功能。教学计算机处于正常运行状态时，它通过串行接口和终端或PC机仿真终端（在PC机上运行PCEC或WinPcec）相连接,使用常用的R、A等监控命令可以进行联机操作。这些监控命令，实现类似于PC机DOS系统下的Debug程序的功能，包括A、U、G、T、R、D、E共7条命令，其格式为一个大写的英文字母表示的命令名、一个空格跟命令参数，下面分别介绍。
	
单条汇编命令A
	格式：A adr 
	这里的 adr 表示此处的地址参数，由4位十六进制的数组成（下同）；无此参数时，系统将取默认值。
	需要注意的是，命令用大、小写字母均可，命令和地址之间可以不用空格，其它命令用法也是这样。  
	功能：完成单条指令的汇编操作，把产生出来的教学计算机的执行代码放入对应的内存单元中。命令名后的地址将是头一条汇编语句的执行码的内存单元地址。每条语句汇编完成之后，系统将相应修改地址值，以便正确处理下条汇编语句。在应该输入汇编语句时，如果不给出汇编语句而直接回车，则结束A命令的运行过程。
	
反汇编命令U  
	格式：U adr
	功能：每次从指定的（或默认的）地址反汇编15条指令，并将结果显示在终端屏幕上。反汇编完成之后，已将该命令的默认地址修改好。接下来键入不带参数的U命令时，将接着从上一次反汇编的最后一条语句之后继续反汇编。

执行程序命令G
	格式：G adr
	功能：从指定的（或默认的）地址连续运行一个用户程序。为了使程序执行后能返回监控程序，要求每个用户程序的最后一条指令一定为RET指令。
	
单指令执行程序命令T
	格式：T adr
	功能：从指定的（或PC中的当前地址）开始单条执行程序指令。每执行一次T将执行一条指令。每次执行后均显示所有通用寄存器及状态寄存器的内容，并反汇编出下一条将要执行的指令。

显示/修改寄存器内容命令R
	格式：R 寄存器名 
	功能：不带参数时，是显示全部寄存器及状态寄存器的值，并反汇编当前PC所指的一条指令，其中状态的显示格式为："F=8位二进制数"，其前六位分别对应于C、Z、V、S、P1、P0的值。带参数时，是修改相应寄存器的值，如R R0↙，再输入36，表示把16进制的值36赋给R0。

显示存储器内容命令D
	格式：D adr
	功能：从指定（或默认的）地址开始显示内存128个存储字的内容。连续的D命令，保证显示内容前后正确的连续关系，即每次执行D命令，会将默认的地址值加上128。
	
修改存储器内容命令E
	格式：E adr
	功能：从指定（或默认的）地址逐字节修改每个内存单元的内容，要求用户输入一个新的值。如果要连续修改下面的单元的内容，则应在输入新值后按空格键。若用户敲了回车键，则会结束E命令的执行过程。
	
使用上述7条命令，就可以完成一些所期望的操作。


交叉汇编器使用说明
交叉汇编器能够分析实验计算机的16位和8位两种平台上的汇编语言代码，并生成相应平台上的机器语言代码。它能够在Windows中运行，使用方法简单，汇编速度较快，有助于在实验机上编制各种程序。

交叉汇编程序的功能
1．伪指令
交叉汇编程序支持如下伪指令：
1．ORG，格式为
ORG 表达式
定义程序的首地址或者当前程序段的起始地址为表达式的值。用户的源程序必须以ORG开始。地址范围是0～65535（字节单位）。用户也可以在程序内部插入多个ORG，用来指定下面新程序段的起始地址，而中间的空余存储单元将在汇编过程中自动填0。
2．EQU（=），格式为
变量名 EQU 表达式
或者
变量名 = 表达式
定义变量Variable的值为expression。
3．DW（或DB），格式分别为
[符号名] DW 表达式|字符串[, 表达式|字符串[...]]
[符号名] DB 表达式|字符串[, 表达式|字符串[...]]
在当前地址处顺次存储表达式的值或字符串。其中DW只能用于16位平台，一个表达式的值或一个字符占2个字节；DB只能用于8位平台，一个表达式的值或一个字符占1个字节。字符串用单引号括起来。如果给出符号名，则符号名的值等于起始地址。例如：
lab     dw      3，5，'String', 'China'
4．BLK，格式为
BLK 表达式
在内存中保留表达式的值的数目的0字（16位平台）或0字节（8位平台）。
5．END，其后没有参数，是程序的结束标志。用户的源程序必须以 END 结尾。
6．INCLUDE，格式为
INCLUDE '文件名'
这是最新版汇编器增加的一条伪指令。它的功能同C语言的#inlcude的预编译指令类似，即相当于把指定的文件的内容插入到INCLUDE伪指令处，如果文件名中无扩展名，对16位平台，汇编器认为扩展名为asm，对8位平台，汇编器认为扩展名为src。INCLUDE伪指令可以嵌套使用，即被包含的文件中又有INCLUDE伪指令，最多可嵌套7层，但不能导致直接或间接递归包含。

2．表达式
交叉汇编程序支持用户使用数值的10进制，16进制表示，缺省为10进制，例如30， 30D，30d均表示是十进制整数30，而30h，30H，0A1h则表示16进制整数。对于表达式，可以支持+、-、*、/等四则运算，但表达式中不能含有括号，运算次序一律从左至右，不支持运算符的优先级。
相对转移指令的转移范围在 -128～127 字节之间, 即转移目标地址与当前地址之差应在这个范围，否则要使用绝对转移指令。

3．指令
指令包括基本指令和扩展指令，具体参见TEC2000实验机16位平台或8位平台的有关技术参考手册。
为了照顾用户习惯，部分指令的指令名可以有多种写法（即别名功能）。列表如下：
16位	
标准名	别名	标准名	别名	
shl	asl	pshf	pushf	
mvrd	mvd	jrc	jc、jrae、jae、jrnb、jnb	
jrnc	jnc、jrnae、jnae、jrb、jb	jrz	jz、jre、je	
jrnz	jnz、jrne、jne	jmpa	jmp	
cala	call	ei	sti	
di	cli	ldra	read	
stra	writ、write	jrs	js	
jrns	jns			
8位	
标准名	别名	标准名	别名	
pshf	pushf	jz	je	
jnz	jne	jc	jae、jnb	
jnc	jnae、jb	writ	write	

4. 指令扩展定义文件
用户编写程序要用的扩展指令为了能被交叉汇编程序识别，必须按照固定的格式在某个文本文件里加以说明。在扩展指令的说明文件中，每个扩展指令占一行，同时要符合如下的格式：
指令名称    指令的操作码    指令的种类    [ r ]
其中字符"r"是可选字段，如果包含则表示汇编该指令时对指令中表达式的值强制进行越界检查。各个字段之间用空格或Tab字符隔开。例如：
load    100010    6    r
其中指令名称不能与已有的指令名称冲突，而且第一位字符不能取数字。操作码字段要求以二进制形式输入，对于16位平台长度只能为8位，对于8位平台长度可以为4、6或者8位，但可以与已有操作码重复（即支持别名功能）。指令的种类必须分别按照下面的16位平台、8位平台指令种类表输入，用户在确定扩展指令所属的类别时，应从字节数，操作数的个数及类型，寄存器或者立即数的位置几个方面考虑，必须与规定的格式一致。不在指令种类表中的指令类型，汇编器目前不能识别。
16位	
种类	操作数	长度	指令格式	目标码格式	指令举例	
1	2	1	OP DR, SR	OP DR SR	add r0, r1	
1	2	1	OP DR, [SR]	OP DR SR	ldrr r2, [r3]	
1	2	1	OP [DR], SR	OP DR SR	strr [r4], r5	
21	1	1	OP PORT	OP PORT	in 80h	
22	1	1	OP SR	OP 0000 SR	push r0	
23	1	1	OP DR	OP DR 0000	dec r0	
3	0	1	OP	OP 00000000	stc	
41	2	2	OP DR, ADDR	OP DR 0000 ADDR	ldra r0, 1000h	
41	2	2	OP DR, DATA	OP DR 0000 DATA	mvrd r1, 2000h	
41	2	2	OP ADDR, SR	OP 0000 SR ADDR	stra 3000h, r2	
42	2	2	OP DR, ADDR[SR]	OP DR SR ADDR	ldrx r0, 1000h[r1]	
42	2	2	OP ADDR[SR], DR	OP DR SR ADDR	strx 2000h[r2], r3	
5	1	1	OP OFFSET	OP OFFSET	jrz 40h	
6	1	2	OP ADDR	OP 00000000 ADDR	jmpa 4000h	
8位	
种类	操作数	长度	指令格式	目标码格式	指令举例	
1	2	1	OP DR2, SR2	OP4 DR2 SR2	add r0, r1	
21	1	1	OP DR2	OP6 DR2	dec r0	
22	1	1	OP DRi	OP6 DRi	inc r8	
23	1	1	OP PORT2	OP6 PORT2	in 0	
3	0	1	OP	OP	stc	
4	2	2	OP DR2, DATA8	OP6 DR2 DATA8	mvd r0, 10h	
5	1	2	OP OFFSET	OP OFFSET	jz 40h	
6	2	3	OP DR2, ADDR	OP6 DR2 ADDR	read r0, 1000h	
7	1	3	OP ADDR	OP ADDR	jump 1000h	
8	1	2	OP PORT	OP PORT	inpt 80h	
注：表中长度指占用的内存单元数，1个内存单元的位数即平台的位数。OP指操作码，占8位；DR和SR分别指目的寄存器和源寄存器，占4位；PORT指端口号，占8位；ADDR指地址，占16位；DATA指数值，占16位；OFFSET指偏移量，占8位。但如果OP、DR、SR、PORT、DATA有下标，则其所占的位数为下标值（这也限制了相应的取值范围）；其中DRi是指R0至R3和R8至R15这12个寄存器，占4位。

交叉汇编程序的操作过程
用编辑程序建好教学机的汇编语言程序源文件，扩展文件名为".SRC"或".ASM"。
用户可以设置汇编选项，在"汇编条件设置"窗口中有：
1.	不生成 Tec 可执行代码数据装载信息
选中表示生成的".COD"目标文件中在文件头没有装载信息，即没有程序段数量、起始地址和长度的信息。该选项用来满足一些特定需求（如汇编监控程序）。如果不选中该选项，则生成的目标文件包含装载信息。
2.	允许使用缺省扩展指令集
选中表示源文件中允许包含教学计算机平台的缺省扩展指令（即虽然还未实现但指令代码已经确定、预留的扩展指令）。如果不选中该选项，则只支持基本指令。
3.	允许使用用户自定义扩展指令文件，用户自定义扩展指令文件名及其路径
选中表示使用指令扩展定义文件，"用户自定义扩展指令文件名及其路径"即为指令扩展定义文件的文件名及其路径。如果文件名中无扩展名，汇编器认为扩展名为ins。不选中该选项表示不使用指令扩展定义文件。
设置汇编选项后使用"编译"按钮、菜单或按"F9"键，系统会开始汇编。
汇编中若无错，程序将产生一个以".LST"为扩展名的列表文件并保存。还将产生教学机的一个可执行程序，其文件名与源程序文件名相同，扩展名为".COD"。
若在汇编过程中发现错误，则终止汇编，并显示出错行的行号及汇编错误状态。根据这些信息，用户就可以找出程序中的错误。
